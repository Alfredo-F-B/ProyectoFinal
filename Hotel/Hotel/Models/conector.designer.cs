#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.17929
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Hotel.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Hotel2012")]
	public partial class conectorDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertAdministrador(Administrador instance);
    partial void UpdateAdministrador(Administrador instance);
    partial void DeleteAdministrador(Administrador instance);
    partial void InsertClienteAgencia(ClienteAgencia instance);
    partial void UpdateClienteAgencia(ClienteAgencia instance);
    partial void DeleteClienteAgencia(ClienteAgencia instance);
    partial void InsertClienteEmpresa(ClienteEmpresa instance);
    partial void UpdateClienteEmpresa(ClienteEmpresa instance);
    partial void DeleteClienteEmpresa(ClienteEmpresa instance);
    partial void InsertClientePersona(ClientePersona instance);
    partial void UpdateClientePersona(ClientePersona instance);
    partial void DeleteClientePersona(ClientePersona instance);
    partial void InsertEmpleado(Empleado instance);
    partial void UpdateEmpleado(Empleado instance);
    partial void DeleteEmpleado(Empleado instance);
    partial void InsertFactura(Factura instance);
    partial void UpdateFactura(Factura instance);
    partial void DeleteFactura(Factura instance);
    partial void InsertHabitacion(Habitacion instance);
    partial void UpdateHabitacion(Habitacion instance);
    partial void DeleteHabitacion(Habitacion instance);
    partial void InsertMantenimiento(Mantenimiento instance);
    partial void UpdateMantenimiento(Mantenimiento instance);
    partial void DeleteMantenimiento(Mantenimiento instance);
    partial void InsertReserva(Reserva instance);
    partial void UpdateReserva(Reserva instance);
    partial void DeleteReserva(Reserva instance);
    partial void InsertServicio(Servicio instance);
    partial void UpdateServicio(Servicio instance);
    partial void DeleteServicio(Servicio instance);
    partial void InsertUsuario(Usuario instance);
    partial void UpdateUsuario(Usuario instance);
    partial void DeleteUsuario(Usuario instance);
    #endregion
		
		public conectorDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["Hotel2012ConnectionString1"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public conectorDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public conectorDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public conectorDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public conectorDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Administrador> Administrador
		{
			get
			{
				return this.GetTable<Administrador>();
			}
		}
		
		public System.Data.Linq.Table<ClienteAgencia> ClienteAgencia
		{
			get
			{
				return this.GetTable<ClienteAgencia>();
			}
		}
		
		public System.Data.Linq.Table<ClienteEmpresa> ClienteEmpresa
		{
			get
			{
				return this.GetTable<ClienteEmpresa>();
			}
		}
		
		public System.Data.Linq.Table<ClientePersona> ClientePersona
		{
			get
			{
				return this.GetTable<ClientePersona>();
			}
		}
		
		public System.Data.Linq.Table<Empleado> Empleado
		{
			get
			{
				return this.GetTable<Empleado>();
			}
		}
		
		public System.Data.Linq.Table<Factura> Factura
		{
			get
			{
				return this.GetTable<Factura>();
			}
		}
		
		public System.Data.Linq.Table<Habitacion> Habitacion
		{
			get
			{
				return this.GetTable<Habitacion>();
			}
		}
		
		public System.Data.Linq.Table<Mantenimiento> Mantenimiento
		{
			get
			{
				return this.GetTable<Mantenimiento>();
			}
		}
		
		public System.Data.Linq.Table<Reserva> Reserva
		{
			get
			{
				return this.GetTable<Reserva>();
			}
		}
		
		public System.Data.Linq.Table<Servicio> Servicio
		{
			get
			{
				return this.GetTable<Servicio>();
			}
		}
		
		public System.Data.Linq.Table<ServicioUsuario> ServicioUsuario
		{
			get
			{
				return this.GetTable<ServicioUsuario>();
			}
		}
		
		public System.Data.Linq.Table<Usuario> Usuario
		{
			get
			{
				return this.GetTable<Usuario>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Administrador")]
	public partial class Administrador : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _IdUsuario;
		
		private string _CI;
		
		private string _ApPaterno;
		
		private string _ApMaterno;
		
		private string _Nombres;
		
		private string _Sexo;
		
		private System.DateTime _FechaNacimiento;
		
		private string _Nacionalidad;
		
		private string _Direccion;
		
		private string _Telefono;
		
		private string _Celular;
		
		private System.DateTime _FechaRegistro;
		
		private EntityRef<Usuario> _Usuario;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdUsuarioChanging(int value);
    partial void OnIdUsuarioChanged();
    partial void OnCIChanging(string value);
    partial void OnCIChanged();
    partial void OnApPaternoChanging(string value);
    partial void OnApPaternoChanged();
    partial void OnApMaternoChanging(string value);
    partial void OnApMaternoChanged();
    partial void OnNombresChanging(string value);
    partial void OnNombresChanged();
    partial void OnSexoChanging(string value);
    partial void OnSexoChanged();
    partial void OnFechaNacimientoChanging(System.DateTime value);
    partial void OnFechaNacimientoChanged();
    partial void OnNacionalidadChanging(string value);
    partial void OnNacionalidadChanged();
    partial void OnDireccionChanging(string value);
    partial void OnDireccionChanged();
    partial void OnTelefonoChanging(string value);
    partial void OnTelefonoChanged();
    partial void OnCelularChanging(string value);
    partial void OnCelularChanged();
    partial void OnFechaRegistroChanging(System.DateTime value);
    partial void OnFechaRegistroChanged();
    #endregion
		
		public Administrador()
		{
			this._Usuario = default(EntityRef<Usuario>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUsuario", DbType="Int NOT NULL")]
		public int IdUsuario
		{
			get
			{
				return this._IdUsuario;
			}
			set
			{
				if ((this._IdUsuario != value))
				{
					if (this._Usuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdUsuarioChanging(value);
					this.SendPropertyChanging();
					this._IdUsuario = value;
					this.SendPropertyChanged("IdUsuario");
					this.OnIdUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CI", DbType="VarChar(8) NOT NULL", CanBeNull=false)]
		public string CI
		{
			get
			{
				return this._CI;
			}
			set
			{
				if ((this._CI != value))
				{
					this.OnCIChanging(value);
					this.SendPropertyChanging();
					this._CI = value;
					this.SendPropertyChanged("CI");
					this.OnCIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApPaterno", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string ApPaterno
		{
			get
			{
				return this._ApPaterno;
			}
			set
			{
				if ((this._ApPaterno != value))
				{
					this.OnApPaternoChanging(value);
					this.SendPropertyChanging();
					this._ApPaterno = value;
					this.SendPropertyChanged("ApPaterno");
					this.OnApPaternoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApMaterno", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string ApMaterno
		{
			get
			{
				return this._ApMaterno;
			}
			set
			{
				if ((this._ApMaterno != value))
				{
					this.OnApMaternoChanging(value);
					this.SendPropertyChanging();
					this._ApMaterno = value;
					this.SendPropertyChanged("ApMaterno");
					this.OnApMaternoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombres", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string Nombres
		{
			get
			{
				return this._Nombres;
			}
			set
			{
				if ((this._Nombres != value))
				{
					this.OnNombresChanging(value);
					this.SendPropertyChanging();
					this._Nombres = value;
					this.SendPropertyChanged("Nombres");
					this.OnNombresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sexo", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string Sexo
		{
			get
			{
				return this._Sexo;
			}
			set
			{
				if ((this._Sexo != value))
				{
					this.OnSexoChanging(value);
					this.SendPropertyChanging();
					this._Sexo = value;
					this.SendPropertyChanged("Sexo");
					this.OnSexoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaNacimiento", DbType="DateTime NOT NULL")]
		public System.DateTime FechaNacimiento
		{
			get
			{
				return this._FechaNacimiento;
			}
			set
			{
				if ((this._FechaNacimiento != value))
				{
					this.OnFechaNacimientoChanging(value);
					this.SendPropertyChanging();
					this._FechaNacimiento = value;
					this.SendPropertyChanged("FechaNacimiento");
					this.OnFechaNacimientoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nacionalidad", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string Nacionalidad
		{
			get
			{
				return this._Nacionalidad;
			}
			set
			{
				if ((this._Nacionalidad != value))
				{
					this.OnNacionalidadChanging(value);
					this.SendPropertyChanging();
					this._Nacionalidad = value;
					this.SendPropertyChanged("Nacionalidad");
					this.OnNacionalidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Direccion", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string Direccion
		{
			get
			{
				return this._Direccion;
			}
			set
			{
				if ((this._Direccion != value))
				{
					this.OnDireccionChanging(value);
					this.SendPropertyChanging();
					this._Direccion = value;
					this.SendPropertyChanged("Direccion");
					this.OnDireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefono", DbType="VarChar(16) NOT NULL", CanBeNull=false)]
		public string Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this.OnTelefonoChanging(value);
					this.SendPropertyChanging();
					this._Telefono = value;
					this.SendPropertyChanged("Telefono");
					this.OnTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Celular", DbType="VarChar(16) NOT NULL", CanBeNull=false)]
		public string Celular
		{
			get
			{
				return this._Celular;
			}
			set
			{
				if ((this._Celular != value))
				{
					this.OnCelularChanging(value);
					this.SendPropertyChanging();
					this._Celular = value;
					this.SendPropertyChanged("Celular");
					this.OnCelularChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaRegistro", DbType="DateTime NOT NULL")]
		public System.DateTime FechaRegistro
		{
			get
			{
				return this._FechaRegistro;
			}
			set
			{
				if ((this._FechaRegistro != value))
				{
					this.OnFechaRegistroChanging(value);
					this.SendPropertyChanging();
					this._FechaRegistro = value;
					this.SendPropertyChanged("FechaRegistro");
					this.OnFechaRegistroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_Administrador", Storage="_Usuario", ThisKey="IdUsuario", OtherKey="Id", IsForeignKey=true)]
		public Usuario Usuario
		{
			get
			{
				return this._Usuario.Entity;
			}
			set
			{
				Usuario previousValue = this._Usuario.Entity;
				if (((previousValue != value) 
							|| (this._Usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuario.Entity = null;
						previousValue.Administrador.Remove(this);
					}
					this._Usuario.Entity = value;
					if ((value != null))
					{
						value.Administrador.Add(this);
						this._IdUsuario = value.Id;
					}
					else
					{
						this._IdUsuario = default(int);
					}
					this.SendPropertyChanged("Usuario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ClienteAgencia")]
	public partial class ClienteAgencia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _IdUsuario;
		
		private string _Nombre;
		
		private string _NIT;
		
		private string _telefono;
		
		private string _email;
		
		private string _direccion;
		
		private string _ciudad;
		
		private string _estado;
		
		private string _pais;
		
		private string _contacto;
		
		private EntityRef<Usuario> _Usuario;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdUsuarioChanging(int value);
    partial void OnIdUsuarioChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnNITChanging(string value);
    partial void OnNITChanged();
    partial void OntelefonoChanging(string value);
    partial void OntelefonoChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OndireccionChanging(string value);
    partial void OndireccionChanged();
    partial void OnciudadChanging(string value);
    partial void OnciudadChanged();
    partial void OnestadoChanging(string value);
    partial void OnestadoChanged();
    partial void OnpaisChanging(string value);
    partial void OnpaisChanged();
    partial void OncontactoChanging(string value);
    partial void OncontactoChanged();
    #endregion
		
		public ClienteAgencia()
		{
			this._Usuario = default(EntityRef<Usuario>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUsuario", DbType="Int NOT NULL")]
		public int IdUsuario
		{
			get
			{
				return this._IdUsuario;
			}
			set
			{
				if ((this._IdUsuario != value))
				{
					if (this._Usuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdUsuarioChanging(value);
					this.SendPropertyChanging();
					this._IdUsuario = value;
					this.SendPropertyChanged("IdUsuario");
					this.OnIdUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NIT", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string NIT
		{
			get
			{
				return this._NIT;
			}
			set
			{
				if ((this._NIT != value))
				{
					this.OnNITChanging(value);
					this.SendPropertyChanging();
					this._NIT = value;
					this.SendPropertyChanged("NIT");
					this.OnNITChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telefono", DbType="VarChar(16) NOT NULL", CanBeNull=false)]
		public string telefono
		{
			get
			{
				return this._telefono;
			}
			set
			{
				if ((this._telefono != value))
				{
					this.OntelefonoChanging(value);
					this.SendPropertyChanging();
					this._telefono = value;
					this.SendPropertyChanged("telefono");
					this.OntelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_direccion", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string direccion
		{
			get
			{
				return this._direccion;
			}
			set
			{
				if ((this._direccion != value))
				{
					this.OndireccionChanging(value);
					this.SendPropertyChanging();
					this._direccion = value;
					this.SendPropertyChanged("direccion");
					this.OndireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ciudad", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string ciudad
		{
			get
			{
				return this._ciudad;
			}
			set
			{
				if ((this._ciudad != value))
				{
					this.OnciudadChanging(value);
					this.SendPropertyChanging();
					this._ciudad = value;
					this.SendPropertyChanged("ciudad");
					this.OnciudadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_estado", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string estado
		{
			get
			{
				return this._estado;
			}
			set
			{
				if ((this._estado != value))
				{
					this.OnestadoChanging(value);
					this.SendPropertyChanging();
					this._estado = value;
					this.SendPropertyChanged("estado");
					this.OnestadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pais", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string pais
		{
			get
			{
				return this._pais;
			}
			set
			{
				if ((this._pais != value))
				{
					this.OnpaisChanging(value);
					this.SendPropertyChanging();
					this._pais = value;
					this.SendPropertyChanged("pais");
					this.OnpaisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contacto", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string contacto
		{
			get
			{
				return this._contacto;
			}
			set
			{
				if ((this._contacto != value))
				{
					this.OncontactoChanging(value);
					this.SendPropertyChanging();
					this._contacto = value;
					this.SendPropertyChanged("contacto");
					this.OncontactoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_ClienteAgencia", Storage="_Usuario", ThisKey="IdUsuario", OtherKey="Id", IsForeignKey=true)]
		public Usuario Usuario
		{
			get
			{
				return this._Usuario.Entity;
			}
			set
			{
				Usuario previousValue = this._Usuario.Entity;
				if (((previousValue != value) 
							|| (this._Usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuario.Entity = null;
						previousValue.ClienteAgencia.Remove(this);
					}
					this._Usuario.Entity = value;
					if ((value != null))
					{
						value.ClienteAgencia.Add(this);
						this._IdUsuario = value.Id;
					}
					else
					{
						this._IdUsuario = default(int);
					}
					this.SendPropertyChanged("Usuario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ClienteEmpresa")]
	public partial class ClienteEmpresa : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _IdUsuario;
		
		private string _Nombre;
		
		private string _NIT;
		
		private string _Telefono;
		
		private string _Email;
		
		private string _Direccion;
		
		private string _Ciudad;
		
		private string _Estado;
		
		private string _Pais;
		
		private string _Contacto;
		
		private EntityRef<Usuario> _Usuario;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdUsuarioChanging(int value);
    partial void OnIdUsuarioChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnNITChanging(string value);
    partial void OnNITChanged();
    partial void OnTelefonoChanging(string value);
    partial void OnTelefonoChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnDireccionChanging(string value);
    partial void OnDireccionChanged();
    partial void OnCiudadChanging(string value);
    partial void OnCiudadChanged();
    partial void OnEstadoChanging(string value);
    partial void OnEstadoChanged();
    partial void OnPaisChanging(string value);
    partial void OnPaisChanged();
    partial void OnContactoChanging(string value);
    partial void OnContactoChanged();
    #endregion
		
		public ClienteEmpresa()
		{
			this._Usuario = default(EntityRef<Usuario>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUsuario", DbType="Int NOT NULL")]
		public int IdUsuario
		{
			get
			{
				return this._IdUsuario;
			}
			set
			{
				if ((this._IdUsuario != value))
				{
					if (this._Usuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdUsuarioChanging(value);
					this.SendPropertyChanging();
					this._IdUsuario = value;
					this.SendPropertyChanged("IdUsuario");
					this.OnIdUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NIT", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string NIT
		{
			get
			{
				return this._NIT;
			}
			set
			{
				if ((this._NIT != value))
				{
					this.OnNITChanging(value);
					this.SendPropertyChanging();
					this._NIT = value;
					this.SendPropertyChanged("NIT");
					this.OnNITChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefono", DbType="VarChar(16) NOT NULL", CanBeNull=false)]
		public string Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this.OnTelefonoChanging(value);
					this.SendPropertyChanging();
					this._Telefono = value;
					this.SendPropertyChanged("Telefono");
					this.OnTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Direccion", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string Direccion
		{
			get
			{
				return this._Direccion;
			}
			set
			{
				if ((this._Direccion != value))
				{
					this.OnDireccionChanging(value);
					this.SendPropertyChanging();
					this._Direccion = value;
					this.SendPropertyChanged("Direccion");
					this.OnDireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ciudad", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string Ciudad
		{
			get
			{
				return this._Ciudad;
			}
			set
			{
				if ((this._Ciudad != value))
				{
					this.OnCiudadChanging(value);
					this.SendPropertyChanging();
					this._Ciudad = value;
					this.SendPropertyChanged("Ciudad");
					this.OnCiudadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Estado", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string Estado
		{
			get
			{
				return this._Estado;
			}
			set
			{
				if ((this._Estado != value))
				{
					this.OnEstadoChanging(value);
					this.SendPropertyChanging();
					this._Estado = value;
					this.SendPropertyChanged("Estado");
					this.OnEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pais", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string Pais
		{
			get
			{
				return this._Pais;
			}
			set
			{
				if ((this._Pais != value))
				{
					this.OnPaisChanging(value);
					this.SendPropertyChanging();
					this._Pais = value;
					this.SendPropertyChanged("Pais");
					this.OnPaisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contacto", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string Contacto
		{
			get
			{
				return this._Contacto;
			}
			set
			{
				if ((this._Contacto != value))
				{
					this.OnContactoChanging(value);
					this.SendPropertyChanging();
					this._Contacto = value;
					this.SendPropertyChanged("Contacto");
					this.OnContactoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_ClienteEmpresa", Storage="_Usuario", ThisKey="IdUsuario", OtherKey="Id", IsForeignKey=true)]
		public Usuario Usuario
		{
			get
			{
				return this._Usuario.Entity;
			}
			set
			{
				Usuario previousValue = this._Usuario.Entity;
				if (((previousValue != value) 
							|| (this._Usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuario.Entity = null;
						previousValue.ClienteEmpresa.Remove(this);
					}
					this._Usuario.Entity = value;
					if ((value != null))
					{
						value.ClienteEmpresa.Add(this);
						this._IdUsuario = value.Id;
					}
					else
					{
						this._IdUsuario = default(int);
					}
					this.SendPropertyChanged("Usuario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ClientePersona")]
	public partial class ClientePersona : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _IdUsuario;
		
		private int _CI;
		
		private string _ApPaterno;
		
		private string _ApMaterno;
		
		private string _Nombre;
		
		private string _Pasaporte;
		
		private string _categoria;
		
		private string _Telefono;
		
		private string _Celular;
		
		private string _Email;
		
		private string _Direccion;
		
		private string _Ciudad;
		
		private string _Estado;
		
		private string _Pais;
		
		private string _Comentarios;
		
		private System.DateTime _Cumpleanos;
		
		private EntityRef<Usuario> _Usuario;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdUsuarioChanging(int value);
    partial void OnIdUsuarioChanged();
    partial void OnCIChanging(int value);
    partial void OnCIChanged();
    partial void OnApPaternoChanging(string value);
    partial void OnApPaternoChanged();
    partial void OnApMaternoChanging(string value);
    partial void OnApMaternoChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnPasaporteChanging(string value);
    partial void OnPasaporteChanged();
    partial void OncategoriaChanging(string value);
    partial void OncategoriaChanged();
    partial void OnTelefonoChanging(string value);
    partial void OnTelefonoChanged();
    partial void OnCelularChanging(string value);
    partial void OnCelularChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnDireccionChanging(string value);
    partial void OnDireccionChanged();
    partial void OnCiudadChanging(string value);
    partial void OnCiudadChanged();
    partial void OnEstadoChanging(string value);
    partial void OnEstadoChanged();
    partial void OnPaisChanging(string value);
    partial void OnPaisChanged();
    partial void OnComentariosChanging(string value);
    partial void OnComentariosChanged();
    partial void OnCumpleanosChanging(System.DateTime value);
    partial void OnCumpleanosChanged();
    #endregion
		
		public ClientePersona()
		{
			this._Usuario = default(EntityRef<Usuario>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUsuario", DbType="Int NOT NULL")]
		public int IdUsuario
		{
			get
			{
				return this._IdUsuario;
			}
			set
			{
				if ((this._IdUsuario != value))
				{
					if (this._Usuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdUsuarioChanging(value);
					this.SendPropertyChanging();
					this._IdUsuario = value;
					this.SendPropertyChanged("IdUsuario");
					this.OnIdUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CI", DbType="Int NOT NULL")]
		public int CI
		{
			get
			{
				return this._CI;
			}
			set
			{
				if ((this._CI != value))
				{
					this.OnCIChanging(value);
					this.SendPropertyChanging();
					this._CI = value;
					this.SendPropertyChanged("CI");
					this.OnCIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApPaterno", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string ApPaterno
		{
			get
			{
				return this._ApPaterno;
			}
			set
			{
				if ((this._ApPaterno != value))
				{
					this.OnApPaternoChanging(value);
					this.SendPropertyChanging();
					this._ApPaterno = value;
					this.SendPropertyChanged("ApPaterno");
					this.OnApPaternoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApMaterno", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string ApMaterno
		{
			get
			{
				return this._ApMaterno;
			}
			set
			{
				if ((this._ApMaterno != value))
				{
					this.OnApMaternoChanging(value);
					this.SendPropertyChanging();
					this._ApMaterno = value;
					this.SendPropertyChanged("ApMaterno");
					this.OnApMaternoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pasaporte", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string Pasaporte
		{
			get
			{
				return this._Pasaporte;
			}
			set
			{
				if ((this._Pasaporte != value))
				{
					this.OnPasaporteChanging(value);
					this.SendPropertyChanging();
					this._Pasaporte = value;
					this.SendPropertyChanged("Pasaporte");
					this.OnPasaporteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_categoria", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string categoria
		{
			get
			{
				return this._categoria;
			}
			set
			{
				if ((this._categoria != value))
				{
					this.OncategoriaChanging(value);
					this.SendPropertyChanging();
					this._categoria = value;
					this.SendPropertyChanged("categoria");
					this.OncategoriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefono", DbType="VarChar(16) NOT NULL", CanBeNull=false)]
		public string Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this.OnTelefonoChanging(value);
					this.SendPropertyChanging();
					this._Telefono = value;
					this.SendPropertyChanged("Telefono");
					this.OnTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Celular", DbType="VarChar(16) NOT NULL", CanBeNull=false)]
		public string Celular
		{
			get
			{
				return this._Celular;
			}
			set
			{
				if ((this._Celular != value))
				{
					this.OnCelularChanging(value);
					this.SendPropertyChanging();
					this._Celular = value;
					this.SendPropertyChanged("Celular");
					this.OnCelularChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Direccion", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string Direccion
		{
			get
			{
				return this._Direccion;
			}
			set
			{
				if ((this._Direccion != value))
				{
					this.OnDireccionChanging(value);
					this.SendPropertyChanging();
					this._Direccion = value;
					this.SendPropertyChanged("Direccion");
					this.OnDireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ciudad", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string Ciudad
		{
			get
			{
				return this._Ciudad;
			}
			set
			{
				if ((this._Ciudad != value))
				{
					this.OnCiudadChanging(value);
					this.SendPropertyChanging();
					this._Ciudad = value;
					this.SendPropertyChanged("Ciudad");
					this.OnCiudadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Estado", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string Estado
		{
			get
			{
				return this._Estado;
			}
			set
			{
				if ((this._Estado != value))
				{
					this.OnEstadoChanging(value);
					this.SendPropertyChanging();
					this._Estado = value;
					this.SendPropertyChanged("Estado");
					this.OnEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pais", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string Pais
		{
			get
			{
				return this._Pais;
			}
			set
			{
				if ((this._Pais != value))
				{
					this.OnPaisChanging(value);
					this.SendPropertyChanging();
					this._Pais = value;
					this.SendPropertyChanged("Pais");
					this.OnPaisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comentarios", DbType="VarChar(1000) NOT NULL", CanBeNull=false)]
		public string Comentarios
		{
			get
			{
				return this._Comentarios;
			}
			set
			{
				if ((this._Comentarios != value))
				{
					this.OnComentariosChanging(value);
					this.SendPropertyChanging();
					this._Comentarios = value;
					this.SendPropertyChanged("Comentarios");
					this.OnComentariosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cumpleanos", DbType="DateTime NOT NULL")]
		public System.DateTime Cumpleanos
		{
			get
			{
				return this._Cumpleanos;
			}
			set
			{
				if ((this._Cumpleanos != value))
				{
					this.OnCumpleanosChanging(value);
					this.SendPropertyChanging();
					this._Cumpleanos = value;
					this.SendPropertyChanged("Cumpleanos");
					this.OnCumpleanosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_ClientePersona", Storage="_Usuario", ThisKey="IdUsuario", OtherKey="Id", IsForeignKey=true)]
		public Usuario Usuario
		{
			get
			{
				return this._Usuario.Entity;
			}
			set
			{
				Usuario previousValue = this._Usuario.Entity;
				if (((previousValue != value) 
							|| (this._Usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuario.Entity = null;
						previousValue.ClientePersona.Remove(this);
					}
					this._Usuario.Entity = value;
					if ((value != null))
					{
						value.ClientePersona.Add(this);
						this._IdUsuario = value.Id;
					}
					else
					{
						this._IdUsuario = default(int);
					}
					this.SendPropertyChanged("Usuario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Empleado")]
	public partial class Empleado : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _IdUsuario;
		
		private string _CI;
		
		private string _ApPaterno;
		
		private string _ApMaterno;
		
		private string _Nombres;
		
		private string _Sexo;
		
		private System.DateTime _FechaNacimiento;
		
		private string _Nacionalidad;
		
		private string _Direccion;
		
		private string _Telefono;
		
		private string _Celular;
		
		private System.DateTime _FechaRegistro;
		
		private EntitySet<Mantenimiento> _Mantenimiento;
		
		private EntityRef<Usuario> _Usuario;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdUsuarioChanging(int value);
    partial void OnIdUsuarioChanged();
    partial void OnCIChanging(string value);
    partial void OnCIChanged();
    partial void OnApPaternoChanging(string value);
    partial void OnApPaternoChanged();
    partial void OnApMaternoChanging(string value);
    partial void OnApMaternoChanged();
    partial void OnNombresChanging(string value);
    partial void OnNombresChanged();
    partial void OnSexoChanging(string value);
    partial void OnSexoChanged();
    partial void OnFechaNacimientoChanging(System.DateTime value);
    partial void OnFechaNacimientoChanged();
    partial void OnNacionalidadChanging(string value);
    partial void OnNacionalidadChanged();
    partial void OnDireccionChanging(string value);
    partial void OnDireccionChanged();
    partial void OnTelefonoChanging(string value);
    partial void OnTelefonoChanged();
    partial void OnCelularChanging(string value);
    partial void OnCelularChanged();
    partial void OnFechaRegistroChanging(System.DateTime value);
    partial void OnFechaRegistroChanged();
    #endregion
		
		public Empleado()
		{
			this._Mantenimiento = new EntitySet<Mantenimiento>(new Action<Mantenimiento>(this.attach_Mantenimiento), new Action<Mantenimiento>(this.detach_Mantenimiento));
			this._Usuario = default(EntityRef<Usuario>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUsuario", DbType="Int NOT NULL")]
		public int IdUsuario
		{
			get
			{
				return this._IdUsuario;
			}
			set
			{
				if ((this._IdUsuario != value))
				{
					if (this._Usuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdUsuarioChanging(value);
					this.SendPropertyChanging();
					this._IdUsuario = value;
					this.SendPropertyChanged("IdUsuario");
					this.OnIdUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CI", DbType="VarChar(8) NOT NULL", CanBeNull=false)]
		public string CI
		{
			get
			{
				return this._CI;
			}
			set
			{
				if ((this._CI != value))
				{
					this.OnCIChanging(value);
					this.SendPropertyChanging();
					this._CI = value;
					this.SendPropertyChanged("CI");
					this.OnCIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApPaterno", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string ApPaterno
		{
			get
			{
				return this._ApPaterno;
			}
			set
			{
				if ((this._ApPaterno != value))
				{
					this.OnApPaternoChanging(value);
					this.SendPropertyChanging();
					this._ApPaterno = value;
					this.SendPropertyChanged("ApPaterno");
					this.OnApPaternoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApMaterno", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string ApMaterno
		{
			get
			{
				return this._ApMaterno;
			}
			set
			{
				if ((this._ApMaterno != value))
				{
					this.OnApMaternoChanging(value);
					this.SendPropertyChanging();
					this._ApMaterno = value;
					this.SendPropertyChanged("ApMaterno");
					this.OnApMaternoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombres", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string Nombres
		{
			get
			{
				return this._Nombres;
			}
			set
			{
				if ((this._Nombres != value))
				{
					this.OnNombresChanging(value);
					this.SendPropertyChanging();
					this._Nombres = value;
					this.SendPropertyChanged("Nombres");
					this.OnNombresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sexo", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string Sexo
		{
			get
			{
				return this._Sexo;
			}
			set
			{
				if ((this._Sexo != value))
				{
					this.OnSexoChanging(value);
					this.SendPropertyChanging();
					this._Sexo = value;
					this.SendPropertyChanged("Sexo");
					this.OnSexoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaNacimiento", DbType="DateTime NOT NULL")]
		public System.DateTime FechaNacimiento
		{
			get
			{
				return this._FechaNacimiento;
			}
			set
			{
				if ((this._FechaNacimiento != value))
				{
					this.OnFechaNacimientoChanging(value);
					this.SendPropertyChanging();
					this._FechaNacimiento = value;
					this.SendPropertyChanged("FechaNacimiento");
					this.OnFechaNacimientoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nacionalidad", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string Nacionalidad
		{
			get
			{
				return this._Nacionalidad;
			}
			set
			{
				if ((this._Nacionalidad != value))
				{
					this.OnNacionalidadChanging(value);
					this.SendPropertyChanging();
					this._Nacionalidad = value;
					this.SendPropertyChanged("Nacionalidad");
					this.OnNacionalidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Direccion", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string Direccion
		{
			get
			{
				return this._Direccion;
			}
			set
			{
				if ((this._Direccion != value))
				{
					this.OnDireccionChanging(value);
					this.SendPropertyChanging();
					this._Direccion = value;
					this.SendPropertyChanged("Direccion");
					this.OnDireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefono", DbType="VarChar(16) NOT NULL", CanBeNull=false)]
		public string Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this.OnTelefonoChanging(value);
					this.SendPropertyChanging();
					this._Telefono = value;
					this.SendPropertyChanged("Telefono");
					this.OnTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Celular", DbType="VarChar(16) NOT NULL", CanBeNull=false)]
		public string Celular
		{
			get
			{
				return this._Celular;
			}
			set
			{
				if ((this._Celular != value))
				{
					this.OnCelularChanging(value);
					this.SendPropertyChanging();
					this._Celular = value;
					this.SendPropertyChanged("Celular");
					this.OnCelularChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaRegistro", DbType="DateTime NOT NULL")]
		public System.DateTime FechaRegistro
		{
			get
			{
				return this._FechaRegistro;
			}
			set
			{
				if ((this._FechaRegistro != value))
				{
					this.OnFechaRegistroChanging(value);
					this.SendPropertyChanging();
					this._FechaRegistro = value;
					this.SendPropertyChanged("FechaRegistro");
					this.OnFechaRegistroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empleado_Mantenimiento", Storage="_Mantenimiento", ThisKey="Id", OtherKey="IdEmpleado")]
		public EntitySet<Mantenimiento> Mantenimiento
		{
			get
			{
				return this._Mantenimiento;
			}
			set
			{
				this._Mantenimiento.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_Empleado", Storage="_Usuario", ThisKey="IdUsuario", OtherKey="Id", IsForeignKey=true)]
		public Usuario Usuario
		{
			get
			{
				return this._Usuario.Entity;
			}
			set
			{
				Usuario previousValue = this._Usuario.Entity;
				if (((previousValue != value) 
							|| (this._Usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuario.Entity = null;
						previousValue.Empleado.Remove(this);
					}
					this._Usuario.Entity = value;
					if ((value != null))
					{
						value.Empleado.Add(this);
						this._IdUsuario = value.Id;
					}
					else
					{
						this._IdUsuario = default(int);
					}
					this.SendPropertyChanged("Usuario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Mantenimiento(Mantenimiento entity)
		{
			this.SendPropertyChanging();
			entity.Empleado = this;
		}
		
		private void detach_Mantenimiento(Mantenimiento entity)
		{
			this.SendPropertyChanging();
			entity.Empleado = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Factura")]
	public partial class Factura : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _IdUsuario;
		
		private int _IdHabitacion;
		
		private int _IdServicio;
		
		private string _RUT;
		
		private string _Ciudad;
		
		private string _Nombre;
		
		private string _Direccion;
		
		private string _Telefono;
		
		private int _Descuento;
		
		private string _ModoPago;
		
		private string _Descripcion;
		
		private double _PrecioTotal;
		
		private EntityRef<Habitacion> _Habitacion;
		
		private EntityRef<Servicio> _Servicio;
		
		private EntityRef<Usuario> _Usuario;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdUsuarioChanging(int value);
    partial void OnIdUsuarioChanged();
    partial void OnIdHabitacionChanging(int value);
    partial void OnIdHabitacionChanged();
    partial void OnIdServicioChanging(int value);
    partial void OnIdServicioChanged();
    partial void OnRUTChanging(string value);
    partial void OnRUTChanged();
    partial void OnCiudadChanging(string value);
    partial void OnCiudadChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnDireccionChanging(string value);
    partial void OnDireccionChanged();
    partial void OnTelefonoChanging(string value);
    partial void OnTelefonoChanged();
    partial void OnDescuentoChanging(int value);
    partial void OnDescuentoChanged();
    partial void OnModoPagoChanging(string value);
    partial void OnModoPagoChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    partial void OnPrecioTotalChanging(double value);
    partial void OnPrecioTotalChanged();
    #endregion
		
		public Factura()
		{
			this._Habitacion = default(EntityRef<Habitacion>);
			this._Servicio = default(EntityRef<Servicio>);
			this._Usuario = default(EntityRef<Usuario>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUsuario", DbType="Int NOT NULL")]
		public int IdUsuario
		{
			get
			{
				return this._IdUsuario;
			}
			set
			{
				if ((this._IdUsuario != value))
				{
					if (this._Usuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdUsuarioChanging(value);
					this.SendPropertyChanging();
					this._IdUsuario = value;
					this.SendPropertyChanged("IdUsuario");
					this.OnIdUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdHabitacion", DbType="Int NOT NULL")]
		public int IdHabitacion
		{
			get
			{
				return this._IdHabitacion;
			}
			set
			{
				if ((this._IdHabitacion != value))
				{
					if (this._Habitacion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdHabitacionChanging(value);
					this.SendPropertyChanging();
					this._IdHabitacion = value;
					this.SendPropertyChanged("IdHabitacion");
					this.OnIdHabitacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdServicio", DbType="Int NOT NULL")]
		public int IdServicio
		{
			get
			{
				return this._IdServicio;
			}
			set
			{
				if ((this._IdServicio != value))
				{
					if (this._Servicio.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdServicioChanging(value);
					this.SendPropertyChanging();
					this._IdServicio = value;
					this.SendPropertyChanged("IdServicio");
					this.OnIdServicioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RUT", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string RUT
		{
			get
			{
				return this._RUT;
			}
			set
			{
				if ((this._RUT != value))
				{
					this.OnRUTChanging(value);
					this.SendPropertyChanging();
					this._RUT = value;
					this.SendPropertyChanged("RUT");
					this.OnRUTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ciudad", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string Ciudad
		{
			get
			{
				return this._Ciudad;
			}
			set
			{
				if ((this._Ciudad != value))
				{
					this.OnCiudadChanging(value);
					this.SendPropertyChanging();
					this._Ciudad = value;
					this.SendPropertyChanged("Ciudad");
					this.OnCiudadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Direccion", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string Direccion
		{
			get
			{
				return this._Direccion;
			}
			set
			{
				if ((this._Direccion != value))
				{
					this.OnDireccionChanging(value);
					this.SendPropertyChanging();
					this._Direccion = value;
					this.SendPropertyChanged("Direccion");
					this.OnDireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefono", DbType="VarChar(16) NOT NULL", CanBeNull=false)]
		public string Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this.OnTelefonoChanging(value);
					this.SendPropertyChanging();
					this._Telefono = value;
					this.SendPropertyChanged("Telefono");
					this.OnTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descuento", DbType="Int NOT NULL")]
		public int Descuento
		{
			get
			{
				return this._Descuento;
			}
			set
			{
				if ((this._Descuento != value))
				{
					this.OnDescuentoChanging(value);
					this.SendPropertyChanging();
					this._Descuento = value;
					this.SendPropertyChanged("Descuento");
					this.OnDescuentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModoPago", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ModoPago
		{
			get
			{
				return this._ModoPago;
			}
			set
			{
				if ((this._ModoPago != value))
				{
					this.OnModoPagoChanging(value);
					this.SendPropertyChanging();
					this._ModoPago = value;
					this.SendPropertyChanged("ModoPago");
					this.OnModoPagoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="VarChar(1000) NOT NULL", CanBeNull=false)]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrecioTotal", DbType="Float NOT NULL")]
		public double PrecioTotal
		{
			get
			{
				return this._PrecioTotal;
			}
			set
			{
				if ((this._PrecioTotal != value))
				{
					this.OnPrecioTotalChanging(value);
					this.SendPropertyChanging();
					this._PrecioTotal = value;
					this.SendPropertyChanged("PrecioTotal");
					this.OnPrecioTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Habitacion_Factura", Storage="_Habitacion", ThisKey="IdHabitacion", OtherKey="Id", IsForeignKey=true)]
		public Habitacion Habitacion
		{
			get
			{
				return this._Habitacion.Entity;
			}
			set
			{
				Habitacion previousValue = this._Habitacion.Entity;
				if (((previousValue != value) 
							|| (this._Habitacion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Habitacion.Entity = null;
						previousValue.Factura.Remove(this);
					}
					this._Habitacion.Entity = value;
					if ((value != null))
					{
						value.Factura.Add(this);
						this._IdHabitacion = value.Id;
					}
					else
					{
						this._IdHabitacion = default(int);
					}
					this.SendPropertyChanged("Habitacion");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Servicio_Factura", Storage="_Servicio", ThisKey="IdServicio", OtherKey="Id", IsForeignKey=true)]
		public Servicio Servicio
		{
			get
			{
				return this._Servicio.Entity;
			}
			set
			{
				Servicio previousValue = this._Servicio.Entity;
				if (((previousValue != value) 
							|| (this._Servicio.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Servicio.Entity = null;
						previousValue.Factura.Remove(this);
					}
					this._Servicio.Entity = value;
					if ((value != null))
					{
						value.Factura.Add(this);
						this._IdServicio = value.Id;
					}
					else
					{
						this._IdServicio = default(int);
					}
					this.SendPropertyChanged("Servicio");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_Factura", Storage="_Usuario", ThisKey="IdUsuario", OtherKey="Id", IsForeignKey=true)]
		public Usuario Usuario
		{
			get
			{
				return this._Usuario.Entity;
			}
			set
			{
				Usuario previousValue = this._Usuario.Entity;
				if (((previousValue != value) 
							|| (this._Usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuario.Entity = null;
						previousValue.Factura.Remove(this);
					}
					this._Usuario.Entity = value;
					if ((value != null))
					{
						value.Factura.Add(this);
						this._IdUsuario = value.Id;
					}
					else
					{
						this._IdUsuario = default(int);
					}
					this.SendPropertyChanged("Usuario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Habitacion")]
	public partial class Habitacion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _Numero;
		
		private string _Categoria;
		
		private string _Estado;
		
		private string _Descripcion;
		
		private string _Piso;
		
		private double _Precio;
		
		private string _TipoPago;
		
		private System.DateTime _Fecha;
		
		private string _TvCable;
		
		private string _Baño;
		
		private string _Acondicionador;
		
		private string _Calefaccion;
		
		private EntitySet<Factura> _Factura;
		
		private EntitySet<Mantenimiento> _Mantenimiento;
		
		private EntitySet<Reserva> _Reserva;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNumeroChanging(int value);
    partial void OnNumeroChanged();
    partial void OnCategoriaChanging(string value);
    partial void OnCategoriaChanged();
    partial void OnEstadoChanging(string value);
    partial void OnEstadoChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    partial void OnPisoChanging(string value);
    partial void OnPisoChanged();
    partial void OnPrecioChanging(double value);
    partial void OnPrecioChanged();
    partial void OnTipoPagoChanging(string value);
    partial void OnTipoPagoChanged();
    partial void OnFechaChanging(System.DateTime value);
    partial void OnFechaChanged();
    partial void OnTvCableChanging(string value);
    partial void OnTvCableChanged();
    partial void OnBañoChanging(string value);
    partial void OnBañoChanged();
    partial void OnAcondicionadorChanging(string value);
    partial void OnAcondicionadorChanged();
    partial void OnCalefaccionChanging(string value);
    partial void OnCalefaccionChanged();
    #endregion
		
		public Habitacion()
		{
			this._Factura = new EntitySet<Factura>(new Action<Factura>(this.attach_Factura), new Action<Factura>(this.detach_Factura));
			this._Mantenimiento = new EntitySet<Mantenimiento>(new Action<Mantenimiento>(this.attach_Mantenimiento), new Action<Mantenimiento>(this.detach_Mantenimiento));
			this._Reserva = new EntitySet<Reserva>(new Action<Reserva>(this.attach_Reserva), new Action<Reserva>(this.detach_Reserva));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Numero", DbType="Int NOT NULL")]
		public int Numero
		{
			get
			{
				return this._Numero;
			}
			set
			{
				if ((this._Numero != value))
				{
					this.OnNumeroChanging(value);
					this.SendPropertyChanging();
					this._Numero = value;
					this.SendPropertyChanged("Numero");
					this.OnNumeroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Categoria", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string Categoria
		{
			get
			{
				return this._Categoria;
			}
			set
			{
				if ((this._Categoria != value))
				{
					this.OnCategoriaChanging(value);
					this.SendPropertyChanging();
					this._Categoria = value;
					this.SendPropertyChanged("Categoria");
					this.OnCategoriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Estado", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string Estado
		{
			get
			{
				return this._Estado;
			}
			set
			{
				if ((this._Estado != value))
				{
					this.OnEstadoChanging(value);
					this.SendPropertyChanging();
					this._Estado = value;
					this.SendPropertyChanged("Estado");
					this.OnEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="VarChar(1000) NOT NULL", CanBeNull=false)]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Piso", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Piso
		{
			get
			{
				return this._Piso;
			}
			set
			{
				if ((this._Piso != value))
				{
					this.OnPisoChanging(value);
					this.SendPropertyChanging();
					this._Piso = value;
					this.SendPropertyChanged("Piso");
					this.OnPisoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Precio", DbType="Float NOT NULL")]
		public double Precio
		{
			get
			{
				return this._Precio;
			}
			set
			{
				if ((this._Precio != value))
				{
					this.OnPrecioChanging(value);
					this.SendPropertyChanging();
					this._Precio = value;
					this.SendPropertyChanged("Precio");
					this.OnPrecioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TipoPago", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string TipoPago
		{
			get
			{
				return this._TipoPago;
			}
			set
			{
				if ((this._TipoPago != value))
				{
					this.OnTipoPagoChanging(value);
					this.SendPropertyChanging();
					this._TipoPago = value;
					this.SendPropertyChanged("TipoPago");
					this.OnTipoPagoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha", DbType="DateTime NOT NULL")]
		public System.DateTime Fecha
		{
			get
			{
				return this._Fecha;
			}
			set
			{
				if ((this._Fecha != value))
				{
					this.OnFechaChanging(value);
					this.SendPropertyChanging();
					this._Fecha = value;
					this.SendPropertyChanged("Fecha");
					this.OnFechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TvCable", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string TvCable
		{
			get
			{
				return this._TvCable;
			}
			set
			{
				if ((this._TvCable != value))
				{
					this.OnTvCableChanging(value);
					this.SendPropertyChanging();
					this._TvCable = value;
					this.SendPropertyChanged("TvCable");
					this.OnTvCableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Baño", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Baño
		{
			get
			{
				return this._Baño;
			}
			set
			{
				if ((this._Baño != value))
				{
					this.OnBañoChanging(value);
					this.SendPropertyChanging();
					this._Baño = value;
					this.SendPropertyChanged("Baño");
					this.OnBañoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Acondicionador", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Acondicionador
		{
			get
			{
				return this._Acondicionador;
			}
			set
			{
				if ((this._Acondicionador != value))
				{
					this.OnAcondicionadorChanging(value);
					this.SendPropertyChanging();
					this._Acondicionador = value;
					this.SendPropertyChanged("Acondicionador");
					this.OnAcondicionadorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Calefaccion", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Calefaccion
		{
			get
			{
				return this._Calefaccion;
			}
			set
			{
				if ((this._Calefaccion != value))
				{
					this.OnCalefaccionChanging(value);
					this.SendPropertyChanging();
					this._Calefaccion = value;
					this.SendPropertyChanged("Calefaccion");
					this.OnCalefaccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Habitacion_Factura", Storage="_Factura", ThisKey="Id", OtherKey="IdHabitacion")]
		public EntitySet<Factura> Factura
		{
			get
			{
				return this._Factura;
			}
			set
			{
				this._Factura.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Habitacion_Mantenimiento", Storage="_Mantenimiento", ThisKey="Id", OtherKey="IdHabitacion")]
		public EntitySet<Mantenimiento> Mantenimiento
		{
			get
			{
				return this._Mantenimiento;
			}
			set
			{
				this._Mantenimiento.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Habitacion_Reserva", Storage="_Reserva", ThisKey="Id", OtherKey="IdHabitacion")]
		public EntitySet<Reserva> Reserva
		{
			get
			{
				return this._Reserva;
			}
			set
			{
				this._Reserva.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Factura(Factura entity)
		{
			this.SendPropertyChanging();
			entity.Habitacion = this;
		}
		
		private void detach_Factura(Factura entity)
		{
			this.SendPropertyChanging();
			entity.Habitacion = null;
		}
		
		private void attach_Mantenimiento(Mantenimiento entity)
		{
			this.SendPropertyChanging();
			entity.Habitacion = this;
		}
		
		private void detach_Mantenimiento(Mantenimiento entity)
		{
			this.SendPropertyChanging();
			entity.Habitacion = null;
		}
		
		private void attach_Reserva(Reserva entity)
		{
			this.SendPropertyChanging();
			entity.Habitacion = this;
		}
		
		private void detach_Reserva(Reserva entity)
		{
			this.SendPropertyChanging();
			entity.Habitacion = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Mantenimiento")]
	public partial class Mantenimiento : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _IdEmpleado;
		
		private int _IdHabitacion;
		
		private string _Tipo;
		
		private System.DateTime _Inicio;
		
		private System.DateTime _Fin;
		
		private string _Material;
		
		private double _Costo;
		
		private string _Decripcion;
		
		private EntityRef<Empleado> _Empleado;
		
		private EntityRef<Habitacion> _Habitacion;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdEmpleadoChanging(int value);
    partial void OnIdEmpleadoChanged();
    partial void OnIdHabitacionChanging(int value);
    partial void OnIdHabitacionChanged();
    partial void OnTipoChanging(string value);
    partial void OnTipoChanged();
    partial void OnInicioChanging(System.DateTime value);
    partial void OnInicioChanged();
    partial void OnFinChanging(System.DateTime value);
    partial void OnFinChanged();
    partial void OnMaterialChanging(string value);
    partial void OnMaterialChanged();
    partial void OnCostoChanging(double value);
    partial void OnCostoChanged();
    partial void OnDecripcionChanging(string value);
    partial void OnDecripcionChanged();
    #endregion
		
		public Mantenimiento()
		{
			this._Empleado = default(EntityRef<Empleado>);
			this._Habitacion = default(EntityRef<Habitacion>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdEmpleado", DbType="Int NOT NULL")]
		public int IdEmpleado
		{
			get
			{
				return this._IdEmpleado;
			}
			set
			{
				if ((this._IdEmpleado != value))
				{
					if (this._Empleado.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdEmpleadoChanging(value);
					this.SendPropertyChanging();
					this._IdEmpleado = value;
					this.SendPropertyChanged("IdEmpleado");
					this.OnIdEmpleadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdHabitacion", DbType="Int NOT NULL")]
		public int IdHabitacion
		{
			get
			{
				return this._IdHabitacion;
			}
			set
			{
				if ((this._IdHabitacion != value))
				{
					if (this._Habitacion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdHabitacionChanging(value);
					this.SendPropertyChanging();
					this._IdHabitacion = value;
					this.SendPropertyChanged("IdHabitacion");
					this.OnIdHabitacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tipo", DbType="VarChar(16) NOT NULL", CanBeNull=false)]
		public string Tipo
		{
			get
			{
				return this._Tipo;
			}
			set
			{
				if ((this._Tipo != value))
				{
					this.OnTipoChanging(value);
					this.SendPropertyChanging();
					this._Tipo = value;
					this.SendPropertyChanged("Tipo");
					this.OnTipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Inicio", DbType="DateTime NOT NULL")]
		public System.DateTime Inicio
		{
			get
			{
				return this._Inicio;
			}
			set
			{
				if ((this._Inicio != value))
				{
					this.OnInicioChanging(value);
					this.SendPropertyChanging();
					this._Inicio = value;
					this.SendPropertyChanged("Inicio");
					this.OnInicioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fin", DbType="DateTime NOT NULL")]
		public System.DateTime Fin
		{
			get
			{
				return this._Fin;
			}
			set
			{
				if ((this._Fin != value))
				{
					this.OnFinChanging(value);
					this.SendPropertyChanging();
					this._Fin = value;
					this.SendPropertyChanged("Fin");
					this.OnFinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Material", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Material
		{
			get
			{
				return this._Material;
			}
			set
			{
				if ((this._Material != value))
				{
					this.OnMaterialChanging(value);
					this.SendPropertyChanging();
					this._Material = value;
					this.SendPropertyChanged("Material");
					this.OnMaterialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Costo", DbType="Float NOT NULL")]
		public double Costo
		{
			get
			{
				return this._Costo;
			}
			set
			{
				if ((this._Costo != value))
				{
					this.OnCostoChanging(value);
					this.SendPropertyChanging();
					this._Costo = value;
					this.SendPropertyChanged("Costo");
					this.OnCostoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Decripcion", DbType="VarChar(1000) NOT NULL", CanBeNull=false)]
		public string Decripcion
		{
			get
			{
				return this._Decripcion;
			}
			set
			{
				if ((this._Decripcion != value))
				{
					this.OnDecripcionChanging(value);
					this.SendPropertyChanging();
					this._Decripcion = value;
					this.SendPropertyChanged("Decripcion");
					this.OnDecripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empleado_Mantenimiento", Storage="_Empleado", ThisKey="IdEmpleado", OtherKey="Id", IsForeignKey=true)]
		public Empleado Empleado
		{
			get
			{
				return this._Empleado.Entity;
			}
			set
			{
				Empleado previousValue = this._Empleado.Entity;
				if (((previousValue != value) 
							|| (this._Empleado.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Empleado.Entity = null;
						previousValue.Mantenimiento.Remove(this);
					}
					this._Empleado.Entity = value;
					if ((value != null))
					{
						value.Mantenimiento.Add(this);
						this._IdEmpleado = value.Id;
					}
					else
					{
						this._IdEmpleado = default(int);
					}
					this.SendPropertyChanged("Empleado");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Habitacion_Mantenimiento", Storage="_Habitacion", ThisKey="IdHabitacion", OtherKey="Id", IsForeignKey=true)]
		public Habitacion Habitacion
		{
			get
			{
				return this._Habitacion.Entity;
			}
			set
			{
				Habitacion previousValue = this._Habitacion.Entity;
				if (((previousValue != value) 
							|| (this._Habitacion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Habitacion.Entity = null;
						previousValue.Mantenimiento.Remove(this);
					}
					this._Habitacion.Entity = value;
					if ((value != null))
					{
						value.Mantenimiento.Add(this);
						this._IdHabitacion = value.Id;
					}
					else
					{
						this._IdHabitacion = default(int);
					}
					this.SendPropertyChanged("Habitacion");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Reserva")]
	public partial class Reserva : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _IdHabitacion;
		
		private int _IdUsuario;
		
		private int _CantDias;
		
		private System.DateTime _LLegada;
		
		private System.DateTime _Salida;
		
		private System.DateTime _Fecha;
		
		private string _TipoPago;
		
		private EntityRef<Habitacion> _Habitacion;
		
		private EntityRef<Usuario> _Usuario;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdHabitacionChanging(int value);
    partial void OnIdHabitacionChanged();
    partial void OnIdUsuarioChanging(int value);
    partial void OnIdUsuarioChanged();
    partial void OnCantDiasChanging(int value);
    partial void OnCantDiasChanged();
    partial void OnLLegadaChanging(System.DateTime value);
    partial void OnLLegadaChanged();
    partial void OnSalidaChanging(System.DateTime value);
    partial void OnSalidaChanged();
    partial void OnFechaChanging(System.DateTime value);
    partial void OnFechaChanged();
    partial void OnTipoPagoChanging(string value);
    partial void OnTipoPagoChanged();
    #endregion
		
		public Reserva()
		{
			this._Habitacion = default(EntityRef<Habitacion>);
			this._Usuario = default(EntityRef<Usuario>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdHabitacion", DbType="Int NOT NULL")]
		public int IdHabitacion
		{
			get
			{
				return this._IdHabitacion;
			}
			set
			{
				if ((this._IdHabitacion != value))
				{
					if (this._Habitacion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdHabitacionChanging(value);
					this.SendPropertyChanging();
					this._IdHabitacion = value;
					this.SendPropertyChanged("IdHabitacion");
					this.OnIdHabitacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUsuario", DbType="Int NOT NULL")]
		public int IdUsuario
		{
			get
			{
				return this._IdUsuario;
			}
			set
			{
				if ((this._IdUsuario != value))
				{
					if (this._Usuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdUsuarioChanging(value);
					this.SendPropertyChanging();
					this._IdUsuario = value;
					this.SendPropertyChanged("IdUsuario");
					this.OnIdUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CantDias", DbType="Int NOT NULL")]
		public int CantDias
		{
			get
			{
				return this._CantDias;
			}
			set
			{
				if ((this._CantDias != value))
				{
					this.OnCantDiasChanging(value);
					this.SendPropertyChanging();
					this._CantDias = value;
					this.SendPropertyChanged("CantDias");
					this.OnCantDiasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LLegada", DbType="Date NOT NULL")]
		public System.DateTime LLegada
		{
			get
			{
				return this._LLegada;
			}
			set
			{
				if ((this._LLegada != value))
				{
					this.OnLLegadaChanging(value);
					this.SendPropertyChanging();
					this._LLegada = value;
					this.SendPropertyChanged("LLegada");
					this.OnLLegadaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Salida", DbType="Date NOT NULL")]
		public System.DateTime Salida
		{
			get
			{
				return this._Salida;
			}
			set
			{
				if ((this._Salida != value))
				{
					this.OnSalidaChanging(value);
					this.SendPropertyChanging();
					this._Salida = value;
					this.SendPropertyChanged("Salida");
					this.OnSalidaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha", DbType="DateTime NOT NULL")]
		public System.DateTime Fecha
		{
			get
			{
				return this._Fecha;
			}
			set
			{
				if ((this._Fecha != value))
				{
					this.OnFechaChanging(value);
					this.SendPropertyChanging();
					this._Fecha = value;
					this.SendPropertyChanged("Fecha");
					this.OnFechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TipoPago", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string TipoPago
		{
			get
			{
				return this._TipoPago;
			}
			set
			{
				if ((this._TipoPago != value))
				{
					this.OnTipoPagoChanging(value);
					this.SendPropertyChanging();
					this._TipoPago = value;
					this.SendPropertyChanged("TipoPago");
					this.OnTipoPagoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Habitacion_Reserva", Storage="_Habitacion", ThisKey="IdHabitacion", OtherKey="Id", IsForeignKey=true)]
		public Habitacion Habitacion
		{
			get
			{
				return this._Habitacion.Entity;
			}
			set
			{
				Habitacion previousValue = this._Habitacion.Entity;
				if (((previousValue != value) 
							|| (this._Habitacion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Habitacion.Entity = null;
						previousValue.Reserva.Remove(this);
					}
					this._Habitacion.Entity = value;
					if ((value != null))
					{
						value.Reserva.Add(this);
						this._IdHabitacion = value.Id;
					}
					else
					{
						this._IdHabitacion = default(int);
					}
					this.SendPropertyChanged("Habitacion");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_Reserva", Storage="_Usuario", ThisKey="IdUsuario", OtherKey="Id", IsForeignKey=true)]
		public Usuario Usuario
		{
			get
			{
				return this._Usuario.Entity;
			}
			set
			{
				Usuario previousValue = this._Usuario.Entity;
				if (((previousValue != value) 
							|| (this._Usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuario.Entity = null;
						previousValue.Reserva.Remove(this);
					}
					this._Usuario.Entity = value;
					if ((value != null))
					{
						value.Reserva.Add(this);
						this._IdUsuario = value.Id;
					}
					else
					{
						this._IdUsuario = default(int);
					}
					this.SendPropertyChanged("Usuario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Servicio")]
	public partial class Servicio : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Categoria;
		
		private double _Precio;
		
		private string _Descripcion;
		
		private System.DateTime _Fecha;
		
		private EntitySet<Factura> _Factura;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCategoriaChanging(string value);
    partial void OnCategoriaChanged();
    partial void OnPrecioChanging(double value);
    partial void OnPrecioChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    partial void OnFechaChanging(System.DateTime value);
    partial void OnFechaChanged();
    #endregion
		
		public Servicio()
		{
			this._Factura = new EntitySet<Factura>(new Action<Factura>(this.attach_Factura), new Action<Factura>(this.detach_Factura));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Categoria", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string Categoria
		{
			get
			{
				return this._Categoria;
			}
			set
			{
				if ((this._Categoria != value))
				{
					this.OnCategoriaChanging(value);
					this.SendPropertyChanging();
					this._Categoria = value;
					this.SendPropertyChanged("Categoria");
					this.OnCategoriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Precio", DbType="Float NOT NULL")]
		public double Precio
		{
			get
			{
				return this._Precio;
			}
			set
			{
				if ((this._Precio != value))
				{
					this.OnPrecioChanging(value);
					this.SendPropertyChanging();
					this._Precio = value;
					this.SendPropertyChanged("Precio");
					this.OnPrecioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="VarChar(1000) NOT NULL", CanBeNull=false)]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha", DbType="DateTime NOT NULL")]
		public System.DateTime Fecha
		{
			get
			{
				return this._Fecha;
			}
			set
			{
				if ((this._Fecha != value))
				{
					this.OnFechaChanging(value);
					this.SendPropertyChanging();
					this._Fecha = value;
					this.SendPropertyChanged("Fecha");
					this.OnFechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Servicio_Factura", Storage="_Factura", ThisKey="Id", OtherKey="IdServicio")]
		public EntitySet<Factura> Factura
		{
			get
			{
				return this._Factura;
			}
			set
			{
				this._Factura.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Factura(Factura entity)
		{
			this.SendPropertyChanging();
			entity.Servicio = this;
		}
		
		private void detach_Factura(Factura entity)
		{
			this.SendPropertyChanging();
			entity.Servicio = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ServicioUsuario")]
	public partial class ServicioUsuario
	{
		
		private int _IdUsuario;
		
		private int _IdServicio;
		
		public ServicioUsuario()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUsuario", DbType="Int NOT NULL")]
		public int IdUsuario
		{
			get
			{
				return this._IdUsuario;
			}
			set
			{
				if ((this._IdUsuario != value))
				{
					this._IdUsuario = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdServicio", DbType="Int NOT NULL")]
		public int IdServicio
		{
			get
			{
				return this._IdServicio;
			}
			set
			{
				if ((this._IdServicio != value))
				{
					this._IdServicio = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Usuario")]
	public partial class Usuario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Nickname;
		
		private string _password;
		
		private EntitySet<Administrador> _Administrador;
		
		private EntitySet<ClienteAgencia> _ClienteAgencia;
		
		private EntitySet<ClienteEmpresa> _ClienteEmpresa;
		
		private EntitySet<ClientePersona> _ClientePersona;
		
		private EntitySet<Empleado> _Empleado;
		
		private EntitySet<Factura> _Factura;
		
		private EntitySet<Reserva> _Reserva;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNicknameChanging(string value);
    partial void OnNicknameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    #endregion
		
		public Usuario()
		{
			this._Administrador = new EntitySet<Administrador>(new Action<Administrador>(this.attach_Administrador), new Action<Administrador>(this.detach_Administrador));
			this._ClienteAgencia = new EntitySet<ClienteAgencia>(new Action<ClienteAgencia>(this.attach_ClienteAgencia), new Action<ClienteAgencia>(this.detach_ClienteAgencia));
			this._ClienteEmpresa = new EntitySet<ClienteEmpresa>(new Action<ClienteEmpresa>(this.attach_ClienteEmpresa), new Action<ClienteEmpresa>(this.detach_ClienteEmpresa));
			this._ClientePersona = new EntitySet<ClientePersona>(new Action<ClientePersona>(this.attach_ClientePersona), new Action<ClientePersona>(this.detach_ClientePersona));
			this._Empleado = new EntitySet<Empleado>(new Action<Empleado>(this.attach_Empleado), new Action<Empleado>(this.detach_Empleado));
			this._Factura = new EntitySet<Factura>(new Action<Factura>(this.attach_Factura), new Action<Factura>(this.detach_Factura));
			this._Reserva = new EntitySet<Reserva>(new Action<Reserva>(this.attach_Reserva), new Action<Reserva>(this.detach_Reserva));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nickname", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string Nickname
		{
			get
			{
				return this._Nickname;
			}
			set
			{
				if ((this._Nickname != value))
				{
					this.OnNicknameChanging(value);
					this.SendPropertyChanging();
					this._Nickname = value;
					this.SendPropertyChanged("Nickname");
					this.OnNicknameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_Administrador", Storage="_Administrador", ThisKey="Id", OtherKey="IdUsuario")]
		public EntitySet<Administrador> Administrador
		{
			get
			{
				return this._Administrador;
			}
			set
			{
				this._Administrador.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_ClienteAgencia", Storage="_ClienteAgencia", ThisKey="Id", OtherKey="IdUsuario")]
		public EntitySet<ClienteAgencia> ClienteAgencia
		{
			get
			{
				return this._ClienteAgencia;
			}
			set
			{
				this._ClienteAgencia.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_ClienteEmpresa", Storage="_ClienteEmpresa", ThisKey="Id", OtherKey="IdUsuario")]
		public EntitySet<ClienteEmpresa> ClienteEmpresa
		{
			get
			{
				return this._ClienteEmpresa;
			}
			set
			{
				this._ClienteEmpresa.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_ClientePersona", Storage="_ClientePersona", ThisKey="Id", OtherKey="IdUsuario")]
		public EntitySet<ClientePersona> ClientePersona
		{
			get
			{
				return this._ClientePersona;
			}
			set
			{
				this._ClientePersona.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_Empleado", Storage="_Empleado", ThisKey="Id", OtherKey="IdUsuario")]
		public EntitySet<Empleado> Empleado
		{
			get
			{
				return this._Empleado;
			}
			set
			{
				this._Empleado.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_Factura", Storage="_Factura", ThisKey="Id", OtherKey="IdUsuario")]
		public EntitySet<Factura> Factura
		{
			get
			{
				return this._Factura;
			}
			set
			{
				this._Factura.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_Reserva", Storage="_Reserva", ThisKey="Id", OtherKey="IdUsuario")]
		public EntitySet<Reserva> Reserva
		{
			get
			{
				return this._Reserva;
			}
			set
			{
				this._Reserva.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Administrador(Administrador entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = this;
		}
		
		private void detach_Administrador(Administrador entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = null;
		}
		
		private void attach_ClienteAgencia(ClienteAgencia entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = this;
		}
		
		private void detach_ClienteAgencia(ClienteAgencia entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = null;
		}
		
		private void attach_ClienteEmpresa(ClienteEmpresa entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = this;
		}
		
		private void detach_ClienteEmpresa(ClienteEmpresa entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = null;
		}
		
		private void attach_ClientePersona(ClientePersona entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = this;
		}
		
		private void detach_ClientePersona(ClientePersona entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = null;
		}
		
		private void attach_Empleado(Empleado entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = this;
		}
		
		private void detach_Empleado(Empleado entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = null;
		}
		
		private void attach_Factura(Factura entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = this;
		}
		
		private void detach_Factura(Factura entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = null;
		}
		
		private void attach_Reserva(Reserva entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = this;
		}
		
		private void detach_Reserva(Reserva entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = null;
		}
	}
}
#pragma warning restore 1591
